-- VHDL wrapper for NiFpgaAG_udp_ip_reader_ip
-- Generated by LabVIEW FPGA IP Export Utility
--
-- Ports:
-- reset      :  Reset port. Minimum assertion length: 1 base clock cycles.
--               Minimum de-assertion length: 80 base clock cycles.
-- enable_in  :  Enable in port. Minimum re-initialization length: 7 base clock cycles.
-- enable_out :  Enable out port.
-- enable_clr :  Enable clear port.
-- ctrlind_00_MAC_Address : Top level control "MAC Address", sync to Clk40Derived2x1I0MHz, array
-- ctrlind_01_IP_Address : Top level control "IP Address", sync to Clk40Derived2x1I0MHz, array
-- ctrlind_02_Dest_Port : Top level control "Dest Port", sync to Clk40Derived2x1I0MHz, u16
-- ctrlind_03_end_of_frame : Top level control "end_of_frame", sync to Clk40Derived2x1I0MHz, bool
-- ctrlind_04_data_valid : Top level control "data_valid", sync to Clk40Derived2x1I0MHz, bool
-- ctrlind_05_data : Top level control "data", sync to Clk40Derived2x1I0MHz, u8
-- ctrlind_06_udp_data_out : Top level indicator "udp_data_out", sync to Clk40Derived2x1I0MHz, u8
-- ctrlind_07_udp_data_valid_out : Top level indicator "udp_data valid_out", sync to Clk40Derived2x1I0MHz, bool
-- ctrlind_08_udp_byte_enable : Top level indicator "udp_byte_enable", sync to Clk40Derived2x1I0MHz, bool
-- Clk40Derived2x1I0MHz : Clock "80MHz", nominal frequency 80.00 MHz, base clock

library ieee;
use ieee.std_logic_1164.all;

entity NiFpgaIPWrapper_udp_ip_reader_ip is
		port (
			reset : in std_logic;
			enable_in : in std_logic;
			enable_out : out std_logic;
			enable_clr : in std_logic;
			ctrlind_00_MAC_Address : in std_logic_vector(47 downto 0);
			ctrlind_01_IP_Address : in std_logic_vector(31 downto 0);
			ctrlind_02_Dest_Port : in std_logic_vector(15 downto 0);
			ctrlind_03_end_of_frame : in std_logic_vector(0 downto 0);
			ctrlind_04_data_valid : in std_logic_vector(0 downto 0);
			ctrlind_05_data : in std_logic_vector(7 downto 0);
			ctrlind_06_udp_data_out : out std_logic_vector(7 downto 0);
			ctrlind_07_udp_data_valid_out : out std_logic_vector(0 downto 0);
			ctrlind_08_udp_byte_enable : out std_logic_vector(0 downto 0);
			Clk40Derived2x1I0MHz : in std_logic
		);
end NiFpgaIPWrapper_udp_ip_reader_ip;

architecture vhdl_labview of NiFpgaIPWrapper_udp_ip_reader_ip is

	component NiFpgaAG_udp_ip_reader_ip
		port (
			reset : in std_logic;
			enable_in : in std_logic;
			enable_out : out std_logic;
			enable_clr : in std_logic;
			ctrlind_00_MAC_Address : in std_logic_vector(47 downto 0);
			ctrlind_01_IP_Address : in std_logic_vector(31 downto 0);
			ctrlind_02_Dest_Port : in std_logic_vector(15 downto 0);
			ctrlind_03_end_of_frame : in std_logic_vector(0 downto 0);
			ctrlind_04_data_valid : in std_logic_vector(0 downto 0);
			ctrlind_05_data : in std_logic_vector(7 downto 0);
			ctrlind_06_udp_data_out : out std_logic_vector(7 downto 0);
			ctrlind_07_udp_data_valid_out : out std_logic_vector(0 downto 0);
			ctrlind_08_udp_byte_enable : out std_logic_vector(0 downto 0);
			Clk40Derived2x1I0MHz : in std_logic;
			tDiagramEnableOut : in std_logic
		);
	end component;

begin
	MyLabVIEWIP : NiFpgaAG_udp_ip_reader_ip
		port map(
			reset => reset,
			enable_in => enable_in,
			enable_out => enable_out,
			enable_clr => enable_clr,
			ctrlind_00_MAC_Address => ctrlind_00_MAC_Address,
			ctrlind_01_IP_Address => ctrlind_01_IP_Address,
			ctrlind_02_Dest_Port => ctrlind_02_Dest_Port,
			ctrlind_03_end_of_frame => ctrlind_03_end_of_frame,
			ctrlind_04_data_valid => ctrlind_04_data_valid,
			ctrlind_05_data => ctrlind_05_data,
			ctrlind_06_udp_data_out => ctrlind_06_udp_data_out,
			ctrlind_07_udp_data_valid_out => ctrlind_07_udp_data_valid_out,
			ctrlind_08_udp_byte_enable => ctrlind_08_udp_byte_enable,
			Clk40Derived2x1I0MHz => Clk40Derived2x1I0MHz,
			tDiagramEnableOut => '1'
		);

end vhdl_labview;

