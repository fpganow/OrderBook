-- VHDL wrapper for NiFpgaAG_orderbook_ip
-- Generated by LabVIEW FPGA IP Export Utility
--
-- Ports:
-- reset      :  Reset port. Minimum assertion length: 8 base clock cycles.
--               Minimum de-assertion length: 80 base clock cycles.
-- enable_in  :  Enable in port. Minimum re-initialization length: 7 base clock cycles.
-- enable_out :  Enable out port.
-- enable_clr :  Enable clear port.
-- ctrlind_00_Ready_for_Output : Top level control "Ready for Output", sync to Clk40Derived2x1I0MHz, bool
-- ctrlind_01_Output_Valid : Top level indicator "Output Valid", sync to Clk40Derived2x1I0MHz, bool
-- ctrlind_02_OrderBook_Result : Top level indicator "OrderBook.Result", sync to Clk40Derived2x1I0MHz, cluster
-- ctrlind_03_Reset : Top level control "Reset", sync to Clk40Derived2x1I0MHz, bool
-- ctrlind_04_OrderBook_Variables : Top level indicator "OrderBook.Variables", sync to Clk40Derived2x1I0MHz, cluster
-- ctrlind_05_Input_Valid : Top level control "Input.Valid", sync to Clk40Derived2x1I0MHz, bool
-- ctrlind_06_OrderBook_Command : Top level control "OrderBook.Command", sync to Clk40Derived2x1I0MHz, cluster
-- ctrlind_07_Ready_for_Input : Top level indicator "Ready for Input", sync to Clk40Derived2x1I0MHz, bool
-- Clk40Derived2x1I0MHz : Clock "80MHz", nominal frequency 80.00 MHz, base clock

library ieee;
use ieee.std_logic_1164.all;

entity NiFpgaIPWrapper_orderbook_ip is
		port (
			reset : in std_logic;
			enable_in : in std_logic;
			enable_out : out std_logic;
			enable_clr : in std_logic;
			ctrlind_00_Ready_for_Output : in std_logic_vector(0 downto 0);
			ctrlind_01_Output_Valid : out std_logic_vector(0 downto 0);
			ctrlind_02_OrderBook_Result : out std_logic_vector(311 downto 0);
			ctrlind_03_Reset : in std_logic_vector(0 downto 0);
			ctrlind_04_OrderBook_Variables : out std_logic_vector(1046 downto 0);
			ctrlind_05_Input_Valid : in std_logic_vector(0 downto 0);
			ctrlind_06_OrderBook_Command : in std_logic_vector(311 downto 0);
			ctrlind_07_Ready_for_Input : out std_logic_vector(0 downto 0);
			Clk40Derived2x1I0MHz : in std_logic
		);
end NiFpgaIPWrapper_orderbook_ip;

architecture vhdl_labview of NiFpgaIPWrapper_orderbook_ip is

	component NiFpgaAG_orderbook_ip
		port (
			reset : in std_logic;
			enable_in : in std_logic;
			enable_out : out std_logic;
			enable_clr : in std_logic;
			ctrlind_00_Ready_for_Output : in std_logic_vector(0 downto 0);
			ctrlind_01_Output_Valid : out std_logic_vector(0 downto 0);
			ctrlind_02_OrderBook_Result : out std_logic_vector(311 downto 0);
			ctrlind_03_Reset : in std_logic_vector(0 downto 0);
			ctrlind_04_OrderBook_Variables : out std_logic_vector(1046 downto 0);
			ctrlind_05_Input_Valid : in std_logic_vector(0 downto 0);
			ctrlind_06_OrderBook_Command : in std_logic_vector(311 downto 0);
			ctrlind_07_Ready_for_Input : out std_logic_vector(0 downto 0);
			Clk40Derived2x1I0MHz : in std_logic;
			tDiagramEnableOut : in std_logic
		);
	end component;

begin
	MyLabVIEWIP : NiFpgaAG_orderbook_ip
		port map(
			reset => reset,
			enable_in => enable_in,
			enable_out => enable_out,
			enable_clr => enable_clr,
			ctrlind_00_Ready_for_Output => ctrlind_00_Ready_for_Output,
			ctrlind_01_Output_Valid => ctrlind_01_Output_Valid,
			ctrlind_02_OrderBook_Result => ctrlind_02_OrderBook_Result,
			ctrlind_03_Reset => ctrlind_03_Reset,
			ctrlind_04_OrderBook_Variables => ctrlind_04_OrderBook_Variables,
			ctrlind_05_Input_Valid => ctrlind_05_Input_Valid,
			ctrlind_06_OrderBook_Command => ctrlind_06_OrderBook_Command,
			ctrlind_07_Ready_for_Input => ctrlind_07_Ready_for_Input,
			Clk40Derived2x1I0MHz => Clk40Derived2x1I0MHz,
			tDiagramEnableOut => '1'
		);

end vhdl_labview;

